# Generated by Django 5.0.2 on 2024-02-26 21:02

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False, verbose_name='Номер')),
                ('title', models.CharField(max_length=256, verbose_name='Название')),
                ('author_full_name', models.CharField(max_length=64, verbose_name='Автор')),
                ('status', models.CharField(choices=[(0, 'В процессе'), (1, 'Согласовано'), (-1, 'Дополнительная экспертиза')], default=0, max_length=2, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
            },
        ),
        migrations.CreateModel(
            name='Expert',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False, verbose_name='Номер')),
                ('name', models.CharField(max_length=64, verbose_name='Имя')),
                ('surname', models.CharField(max_length=64, verbose_name='Фамилия, Отчество')),
                ('authority', models.FloatField(validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)], verbose_name='Авторитет')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'Эксперт',
                'verbose_name_plural': 'Эксперты',
            },
        ),
        migrations.CreateModel(
            name='Marks',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False, verbose_name='Номер')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('pni_1', models.IntegerField(help_text='Соответствие предмета доклада тематике конференции', validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)], verbose_name='ПНИ_1')),
                ('pni_2', models.IntegerField(help_text='Научная новизна представляемого материала', validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)], verbose_name='ПНИ_2')),
                ('pni_3', models.IntegerField(help_text='Актуальность исследования', validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)], verbose_name='ПНИ_3')),
                ('pni_4', models.IntegerField(help_text='Обоснованность применяемых методов исследования', validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)], verbose_name='ПНИ_4')),
                ('pni_5', models.IntegerField(help_text='Обоснованность структуры статьи', validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)], verbose_name='ПНИ_5')),
                ('pni_6', models.IntegerField(help_text='Обоснованность и наглядность представленных рисунков, графиков и таблиц', validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)], verbose_name='ПНИ_6')),
                ('po_1', models.IntegerField(help_text='Соответствие оформленных материалов заданному шаблону', validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)], verbose_name='ПО_1')),
                ('po_2', models.IntegerField(help_text='Качество языка изложения', validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)], verbose_name='ПО_2')),
                ('po_3', models.IntegerField(help_text='Соответствие аннотации описанию работы', validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)], verbose_name='ПО_3')),
                ('po_4', models.IntegerField(help_text='Обоснованность и качество ключевых слов ', validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)], verbose_name='ПО_4')),
                ('po_5', models.IntegerField(help_text='Список литературы: адекватность и правильность цитирования', validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)], verbose_name='ПО_5')),
                ('article_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mark_analyzer.article', verbose_name='Статья')),
                ('expert_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mark_analyzer.expert', verbose_name='Эксперт')),
            ],
            options={
                'verbose_name': 'Оценка',
                'verbose_name_plural': 'Оценки',
            },
        ),
    ]
